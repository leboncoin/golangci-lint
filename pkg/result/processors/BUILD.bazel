load("@rules_go//go:def.bzl", "go_library", "go_test")

# gazelle:exclude testdata

go_library(
    name = "processors",
    srcs = [
        "autogenerated_exclude.go",
        "base_rule.go",
        "cgo.go",
        "diff.go",
        "exclude.go",
        "exclude_rules.go",
        "filename_unadjuster.go",
        "fixer.go",
        "identifier_marker.go",
        "issues.go",
        "max_from_linter.go",
        "max_per_file_from_linter.go",
        "max_same_issues.go",
        "nolint.go",
        "path_prefixer.go",
        "path_prettifier.go",
        "path_shortener.go",
        "processor.go",
        "severity_rules.go",
        "skip_dirs.go",
        "skip_files.go",
        "sort_results.go",
        "source_code.go",
        "uniq_by_line.go",
    ],
    importpath = "github.com/golangci/golangci-lint/pkg/result/processors",
    visibility = ["//visibility:public"],
    deps = [
        "//internal/robustio",
        "//pkg/config",
        "//pkg/fsutils",
        "//pkg/golinters",
        "//pkg/goutil",
        "//pkg/lint/linter",
        "//pkg/lint/lintersdb",
        "//pkg/logutils",
        "//pkg/result",
        "//pkg/timeutils",
        "@com_github_golangci_revgrep//:revgrep",
        "@org_golang_x_tools//go/packages",
    ],
)

go_test(
    name = "processors_test",
    srcs = [
        "autogenerated_exclude_test.go",
        "exclude_rules_test.go",
        "exclude_test.go",
        "identifier_marker_test.go",
        "max_from_linter_test.go",
        "max_per_file_from_linter_test.go",
        "max_same_issues_test.go",
        "nolint_test.go",
        "path_prefixer_test.go",
        "processor_test.go",
        "severity_rules_test.go",
        "skip_files_test.go",
        "sort_results_test.go",
        "uniq_by_line_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":processors"],
    deps = [
        "//pkg/config",
        "//pkg/fsutils",
        "//pkg/golinters",
        "//pkg/lint/lintersdb",
        "//pkg/logutils",
        "//pkg/report",
        "//pkg/result",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//mock",
        "@com_github_stretchr_testify//require",
    ],
)
